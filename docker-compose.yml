version: '3'
services:
  nginx:
      image: nginx:alpine
      restart: unless-stopped
      hostname: nginx
      ports:
        - "80:80"
      links:
        - openvas
      volumes:
        - ./nginx.conf:/etc/nginx/nginx.conf:ro
        - ./data/letsencrypt:/etc/letsencrypt
        - ./data/letsencrypt-www:/tmp/letsencrypt
  # This Nginx requires the certificates to exist, otherwise will fail
  nginx_ssl:
      image: nginx:alpine
      restart: unless-stopped
      hostname: nginx_ssl
      ports:
        - "443:443"
      links:
        - openvas
        - letsencrypt
      volumes:
        - ./nginx_ssl.conf:/etc/nginx/nginx.conf:ro
        - ./data/letsencrypt:/etc/letsencrypt
        - ./data/letsencrypt-www:/tmp/letsencrypt
  letsencrypt:
      restart: always
      image: kvaps/letsencrypt-webroot
      volumes:
        - ./data/letsencrypt:/etc/letsencrypt
        - ./data/letsencrypt-www:/tmp/letsencrypt
      links:
        - nginx
      environment:
        DOMAINS: ${siteUrl:-example.com}
        EMAIL: ${lets_encrypt_mail:-webmaster@example.com}
        WEBROOT_PATH: /tmp/letsencrypt
        EXP_LIMIT: 30
        CHECK_FREQ: 30
  openvas:
    image: "mikesplain/openvas"
    restart: unless-stopped
    env_file:
      - .env
    ports:
     - "8443:443"
    volumes:
     - "/data:/var/lib/openvas/mgr"
    networks:
      - default
      - web
    labels:
      - "deck-chores.dump.command=sh -c \"greenbone-nvt-sync; openvasmd --rebuild --progress\""
      - "deck-chores.dump.interval=daily"

 # Daily updates to openvas
  cron:
    restart: unless-stopped
    image: funkyfuture/deck-chores
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

# run docker network create web before
networks:
  web:
    external: true

